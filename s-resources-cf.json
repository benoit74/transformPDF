{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application's resources outside of Lambdas and Api Gateway",
  "Resources": {
    "IamRoleLambda": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "IamPolicyLambda": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "${stage}-${project}-lambda",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "arn:aws:logs:${region}:*:*"
            },
            {
              "Effect": "Allow",
              "Action" : "s3:*",
              "Resource" : "arn:aws:s3:::${stageL}-${projectL}-storage/*"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "IamRoleLambda"
          }
        ]
      }
    },
    "S3Bucket": {
      "Type" : "AWS::S3::Bucket",
      "Properties": {
        "AccessControl" : "Private",
        "BucketName" : "${stageL}-${projectL}-storage" 
      },
      "DeletionPolicy" : "Delete"
    },
    "CFHelperStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://s3.amazonaws.com/com.gilt.public.backoffice/cloudformation_templates/lookup_stack_outputs.template"
      }
    },
    "CFHelper": {
      "Type": "Custom::CFHelper",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["CFHelperStack", "Outputs.LookupStackOutputsArn"] },
        "StackName": "cloudhelper-stack"
      },
      "DependsOn": [
         "CFHelperStack"
      ]
    },
    "IncomingMailsFolder": {
      "Type": "Custom::S3PutObject",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["CFHelper","S3PutObjectFunctionArn"] },
        "Bucket": { "Ref": "S3Bucket" },
        "Key": "incoming_mails/"
      },
      "DependsOn": [
        "CFHelper","S3Bucket"
      ]
    },
    "S3PutBucketPolicy": {
      "Type": "Custom::S3PutBucketPolicy",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["CFHelper", "S3PutBucketPolicyFunctionArn"] },
        "Bucket": { "Ref": "S3Bucket" },
        "Policy": "{ \"Version\": \"2008-10-17\", \"Statement\": [ { \"Effect\": \"Allow\", \"Principal\": { \"Service\": \"ses.amazonaws.com\" }, \"Action\": \"s3:PutObject\", \"Resource\": \"arn:aws:s3:::${stageL}-${projectL}-storage/incoming_mails/*\", \"Condition\": { \"StringEquals\": { \"aws:Referer\": \"498397240612\" } } } ] }"
      },
      "DependsOn": [
        "CFHelper","S3Bucket","IncomingMailsFolder"
      ]
    },
    "SesReceiptRule": {
      "Type": "Custom::SESCreateReceiptRule",
      "Properties": {
        "ServiceToken": { "Fn::GetAtt" : ["CFHelper","SesCreateReceiptRuleFunctionArn"] },
        "Rule" : {
          "Name": "${stage}-${project}-SESRule",
          "Recipients" : ["${stage}-${project}@ploumpouloum.com"],
          "Enabled" : true,
          "ScanEnabled" : true,
          "Actions" : [{
            "S3Action": {
              "BucketName": { "Ref": "S3Bucket" }, 
              "ObjectKeyPrefix": "incoming_mails/"
            }
          }]
        },
        "RuleSetName" : "myRuleSet"
      },
      "DependsOn": [
        "CFHelper","S3Bucket","IncomingMailsFolder","S3PutBucketPolicy"
      ]
    }
  },
  "Outputs": {
    "IamRoleArnLambda": {
      "Description": "ARN of the lambda IAM role",
      "Value": {
        "Fn::GetAtt": [
          "IamRoleLambda",
          "Arn"
        ]
      }
    }
  }
}
